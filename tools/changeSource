#!/usr/local/bin/python3
import click
import pyperclip
import os


class Manager:
    def __init__(self, name, data, get_curr, set_curr, init_hook = None) -> None:
        self.get_curr = get_curr
        self.set_curr = set_curr
        self.data = data
        self.name = name
        if init_hook:
            init_hook()

    def show_curr(self):
        click.secho(
            f"[{self.name}] current registry: {self.get_curr()}", fg="green")

    def ask_switch(self):
        click.secho('switch registry? [Y/n] ', bold=True)
        if click.getchar() in ['\r', 'y', 'Y']:
            new_registry = self.data[1-self.data.index(self.get_curr())]
            self.set_curr(new_registry)
            click.secho(
                f"[{self.name}] current registry changed to: {self.get_curr()}", fg="green")
        else:
            click.secho("did not switched.")

def exec(x): return os.popen(x).read().strip()

@click.group()
def cli():
    pass


@click.command()
@click.argument("arch", default="amd")
@click.option("--sudo", is_flag=True, help="use sudo")
def apt(arch, sudo):
    path = "/etc/apt/sources.list"
    targetSource = "mirrors.tuna.tsinghua.edu.cn"
    prefix = "sudo" if sudo else ""
    def add_prefix(x): return f"{prefix} {x}"
    data = {
        "arm": f'sed -i "s/ports.ubuntu.com/{targetSource}/g" {path}',
        "amd": f'sed -i -r "s/[a-z]+.ubuntu.com/{targetSource}/g" {path}'
    }
    if arch not in ['arm', 'amd']:
        click.secho("arch not known")
    commands = [
        f"cp {path} {path}.bak",
        f"{data[arch]}"
    ]
    commands = [*map(add_prefix, commands)]
    toBeCopied = "\n".join(commands)
    pyperclip.copy(toBeCopied)
    click.secho(f"command copied: \n{toBeCopied}", fg="green")


@click.command()
@click.option('-p', '--pnpm', is_flag=True, help="use pnpm")
def npm(pnpm):
    manager = Manager(
        name="pnpm" if pnpm else "npm",
        data=[
            "https://registry.npmmirror.com/",
            "https://registry.npmjs.org/"
        ],
        get_curr=lambda: exec(f"{manager} config get registry"),
        set_curr=lambda x: exec(f"{manager} config set registry {x}"),
    )
    manager.show_curr()
    manager.ask_switch()


@click.command()
@click.option('-t','--temp', is_flag=True, help="temporary useage")
def pip(temp):
    def init_hook():
        # 如果没换过源 这个list是空的
        if not exec("pip3 config list"):
            exec("pip3 config set global.index-url https://pypi.org/simple/")
    data = [
        "https://pypi.org/simple/",
        "https://pypi.tuna.tsinghua.edu.cn/simple/"
    ]
    if temp:
        click.secho("for temporary useage:")
        click.secho("\n".join([f"... -i {url}" for url in data]))
    else:
        manager = Manager(
            name="pip",
            data=data,
            get_curr=lambda: exec("pip3 config get global.index-url"),
            set_curr=lambda x: exec(f"pip3 config set global.index-url {x}"),
            init_hook=init_hook
        )
        manager.show_curr()
        manager.ask_switch()

@click.command()
def docker():
    #TODO
    pass

cli.add_command(apt)
cli.add_command(npm)
cli.add_command(pip)

if __name__ == '__main__':
    cli()
